--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -32,48 +32,36 @@ endif ()
 set(CMAKE_C_FLAGS "-Wall -Wextra -Wunused -pipe -std=gnu99")
 set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIC")
 
-if (CMAKE_COMPILER_IS_GNUCC OR CMAKE_C_COMPILER_ID STREQUAL "Clang")
-	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wno-variadic-macros")
-	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wsequence-point")
-	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wredundant-decls")
-	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wshadow")
-
-	# gcc >= 4.2
-	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wcomment")
-	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wmain")
-	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wparentheses")
-	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wfloat-equal")
-
-	# gcc >= 4.6
-	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wmissing-prototypes")
-	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wno-missing-field-initializers")
-	#set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Winline")
-	#set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wconversion")
-	#set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wswitch-enum")
-	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wunused")
-	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wunused-parameter")
-	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wunused-variable")
-	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wunused-macros")
-	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wunused-value")
-	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wunused-function")
-	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wunused-result")
-
-	if (CMAKE_COMPILER_IS_GNUCC)
-		set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wtrampolines")
-		set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wunsafe-loop-optimizations")
-		set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wunused-but-set-parameter")
-		set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wunused-but-set-variable")
-	endif()
-else()
-	message("The default compiler set in CC is not supported.")
-	message("You need to use gcc (with a version >= 4.2) or Clang (version >= 9)")
-	message("You can set your default compiler either by updating your CC variable environment:")
-	message("export CC=/path/to/gcc")
-	message("export CC=/path/to/clang-9")
-	message("Or by adding a flag when calling CMake: ")
-	message("-D CMAKE_C_COMPILER=gcc")
-	message("-D CMAKE_C_COMPILER=clang-9")
-	message( FATAL_ERROR "CMake will exit.")
+set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wno-variadic-macros")
+set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wsequence-point")
+set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wredundant-decls")
+set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wshadow")
+
+# gcc >= 4.2
+set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wcomment")
+set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wmain")
+set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wparentheses")
+set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wfloat-equal")
+
+# gcc >= 4.6
+set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wmissing-prototypes")
+set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wno-missing-field-initializers")
+#set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Winline")
+#set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wconversion")
+#set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wswitch-enum")
+set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wunused")
+set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wunused-parameter")
+set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wunused-variable")
+set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wunused-macros")
+set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wunused-value")
+set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wunused-function")
+set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wunused-result")
+
+if (CMAKE_COMPILER_IS_GNUCC)
+	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wtrampolines")
+	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wunsafe-loop-optimizations")
+	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wunused-but-set-parameter")
+	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wunused-but-set-variable")
 endif()
 
 
